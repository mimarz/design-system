name: build, test & lint
on:
  workflow_dispatch:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout, install pnpm & cache 🛎️
        run: |
          REPO="https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git"
          git clone -b ci/actions --filter=blob:none --no-checkout --depth 1 --sparse $REPO .
          git sparse-checkout init --cone
          git sparse-checkout set libraries/core-react libraries/tokens libraries/icons
          git checkout
      - name: Install pnpm & dependencies 📦
        uses: pnpm/action-setup@v1.2.1
        with:
          version: latest
          bin_dest: ./pnpm/bin
          run_install: |
            - recursive: true
      - name: Print github sha
        run: echo "sha:${{ github.sha }}"
      - name: Cache files
        uses: actions/cache@v2
        with:
          path: |
            ./*
            ~/.pnpm-store
            ~/setup-pnpm
          key: ${{ github.sha }}
  build-tokens:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/cache@v2
        with:
          path: |
            ./*
            ~/.pnpm-store
            ~/setup-pnpm
          key: ${{ github.sha }}
      - name: Print
        run: ls
      - run: ./pnpm/bin/pnpm --filter @equinor/eds-tokens run build
      - uses: actions/cache@v2
        env:
          lib: tokens
        with:
          path: |
            ./libraries/{{ env.lib }}
          key: ${{ github.sha }}-build${{ env.lib }}
  build-icons:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/cache@v2
        with:
          path: |
            ./*
            ~/.pnpm-store
            ~/setup-pnpm
          key: ${{ github.sha }}
      - name: Print
        run: ls
      - run: ./pnpm/bin/pnpm --filter @equinor/eds-icons run build
      - uses: actions/cache@v2
        env:
          lib: icons
        with:
          path: |
            ./libraries/{{ env.lib }}
          key: ${{ github.sha }}-build${{ env.lib }}
  build-core-react:
    runs-on: ubuntu-latest
    needs: [build-icons, build-tokens]
    steps:
      - uses: actions/cache@v2
        with:
          path: |
            ./*
            ~/.pnpm-store
            ~/setup-pnpm
          key: ${{ github.sha }}
      - uses: actions/cache@v2
        name: Get icons build 🔧
        env:
          lib: icons
        with:
          path: |
            ./libraries/{{ env.lib }}
          key: ${{ github.sha }}-build${{ env.lib }}
      - uses: actions/cache@v2
        name: Get tokens build 🔧
        env:
          lib: tokens
        with:
          path: |
            ./libraries/{{ env.lib }}
          key: ${{ github.sha }}-build${{ env.lib }}
      - run: ./pnpm/bin/pnpm --filter @equinor/eds-core-react run build
  test:
    name: Run core-react tests ✅
    runs-on: ubuntu-latest
    needs: [build-core-react]
    steps:
      - uses: actions/cache@v2
        with:
          path: |
            ./*
            ~/.pnpm-store
            ~/setup-pnpm
          key: ${{ github.sha }}
      - run: ./pnpm/bin/pnpm --filter @equinor/eds-core-react run test
  lint:
    runs-on: ubuntu-latest
    needs: [build-core-react]
    steps:
      - uses: actions/cache@v2
        with:
          path: |
            ./*
            ~/.pnpm-store
            ~/setup-pnpm
          key: ${{ github.sha }}
      - name: Lint core-react and stories ✅
        run: ./pnpm/bin/pnpm run lint ./libraries/core-react

  # build-storybook:
  #   runs-on: ubuntu-latest
  #   needs: setup
  #   steps:
  #     - name: Build storybook 🔧
  #       run: pnpm build:storybook
